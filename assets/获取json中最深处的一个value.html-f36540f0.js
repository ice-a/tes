const n=JSON.parse(`{"key":"v-576f863b","path":"/posts/idea/%E8%8E%B7%E5%8F%96json%E4%B8%AD%E6%9C%80%E6%B7%B1%E5%A4%84%E7%9A%84%E4%B8%80%E4%B8%AAvalue.html","title":"获取json中最深处的一个value","lang":"zh-CN","frontmatter":{"title":"获取json中最深处的一个value","category":["code"],"tag":["python"],"description":"import json import time with open(\\"../question2/用代码实现找到字典中的value.json\\", \\"r\\", encoding=\\"utf-8\\") as f: data = json.load(f) # 统计耗时 def count_running(f): def inner(*arg, **kwarg): s_time = time.time() res = f(*arg, **kwarg) e_time = time.time() print('耗时：{}秒'.format(e_time - s_time)) return res return inner # 递归获取 @count_running def recursion_get_value(dict_data): for k, v in dict_data.items(): if type(v) == dict: recursion_get_value(v) else: print(\\"recursion_get_value:\\", v) recursion_get_value(data)","head":[["meta",{"property":"og:url","content":"https://lideshan.top/posts/idea/%E8%8E%B7%E5%8F%96json%E4%B8%AD%E6%9C%80%E6%B7%B1%E5%A4%84%E7%9A%84%E4%B8%80%E4%B8%AAvalue.html"}],["meta",{"property":"og:site_name","content":"木子"}],["meta",{"property":"og:title","content":"获取json中最深处的一个value"}],["meta",{"property":"og:description","content":"import json import time with open(\\"../question2/用代码实现找到字典中的value.json\\", \\"r\\", encoding=\\"utf-8\\") as f: data = json.load(f) # 统计耗时 def count_running(f): def inner(*arg, **kwarg): s_time = time.time() res = f(*arg, **kwarg) e_time = time.time() print('耗时：{}秒'.format(e_time - s_time)) return res return inner # 递归获取 @count_running def recursion_get_value(dict_data): for k, v in dict_data.items(): if type(v) == dict: recursion_get_value(v) else: print(\\"recursion_get_value:\\", v) recursion_get_value(data)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-31T11:11:28.000Z"}],["meta",{"property":"article:author","content":"爱喝水的木子"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:modified_time","content":"2023-08-31T11:11:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"获取json中最深处的一个value\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-31T11:11:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"爱喝水的木子\\",\\"url\\":\\"https://lideshan.top\\",\\"email\\":\\"muzi@lideshan.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1693480288000,"updatedTime":1693480288000,"contributors":[{"name":"爱喝水的木子","email":"50564847+ice-a@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.33,"words":100},"filePathRelative":"posts/idea/获取json中最深处的一个value.md","localizedDate":"2023年8月31日","excerpt":"<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> json\\n<span class=\\"token keyword\\">import</span> time\\n<span class=\\"token keyword\\">with</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"../question2/用代码实现找到字典中的value.json\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"r\\"</span><span class=\\"token punctuation\\">,</span> encoding<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"utf-8\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> f<span class=\\"token punctuation\\">:</span>\\n    data <span class=\\"token operator\\">=</span> json<span class=\\"token punctuation\\">.</span>load<span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token comment\\"># 统计耗时</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">count_running</span><span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">inner</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>arg<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">**</span>kwarg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        s_time <span class=\\"token operator\\">=</span> time<span class=\\"token punctuation\\">.</span>time<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        res <span class=\\"token operator\\">=</span> f<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>arg<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">**</span>kwarg<span class=\\"token punctuation\\">)</span>\\n        e_time <span class=\\"token operator\\">=</span> time<span class=\\"token punctuation\\">.</span>time<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'耗时：{}秒'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>e_time <span class=\\"token operator\\">-</span> s_time<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> res\\n\\n    <span class=\\"token keyword\\">return</span> inner\\n\\n\\n<span class=\\"token comment\\"># 递归获取</span>\\n<span class=\\"token decorator annotation punctuation\\">@count_running</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">recursion_get_value</span><span class=\\"token punctuation\\">(</span>dict_data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">for</span> k<span class=\\"token punctuation\\">,</span> v <span class=\\"token keyword\\">in</span> dict_data<span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">type</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token builtin\\">dict</span><span class=\\"token punctuation\\">:</span>\\n            recursion_get_value<span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"recursion_get_value:\\"</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">)</span>\\n\\n\\nrecursion_get_value<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"爱喝水的木子"},"autoDesc":true}`);export{n as data};
