const n=JSON.parse(`{"key":"v-c6bde18e","path":"/posts/python/%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87.html","title":"压缩图片","lang":"zh-CN","frontmatter":{"title":"压缩图片","category":["code"],"tag":["python","压缩","图片"],"description":"基于pillow进行图片压缩 import os from PIL import Image # 获取图片文件大小 def get_size(file): # 获取文件大小:KB size = os.path.getsize(file) return size / 1024 # 拼接输出文件地址 def get_outfile(infile, outfile): if outfile: return outfile dir, suffix = os.path.splitext(infile) outfile = '{}-out{}'.format(dir, suffix) return outfile # 压缩图片方法(配置即可用_1007) def compress_image(infile, outfile='', mb=600, step=10, quality=80): # 判断该张图片是否压缩 if os.path.exists(outfile): return \\"\\"\\"不改变图片尺寸压缩到指定大小 :param infile: 压缩源文件 :param outfile: 压缩文件保存地址 :param mb: 压缩目标，KB :param step: 每次调整的压缩比率 :param quality: 初始压缩比率 :return: 压缩文件地址，压缩文件大小 \\"\\"\\" o_size = get_size(infile) if o_size &lt;= mb: return infile outfile = get_outfile(infile, outfile) while o_size &gt; mb: im = Image.open(infile) im.save(outfile, quality=quality) if quality - step &lt; 0: break quality -= step o_size = get_size(outfile) return outfile, get_size(outfile) # 扩展压缩 a = r\\"C:\\\\Users\\\\DM\\\\Desktop\\\\图片过长\\\\新建文件夹\\\\1\\" b = r\\"C:\\\\Users\\\\DM\\\\Desktop\\\\图片过长\\\\新建文件夹\\\\2\\" for i in os.listdir(a): in_file = os.path.join(a, i) out_file = os.path.join(b, i) print(in_file, out_file) compress_image(in_file, out_file)","head":[["meta",{"property":"og:url","content":"https://lideshan.top/posts/python/%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87.html"}],["meta",{"property":"og:site_name","content":"木子"}],["meta",{"property":"og:title","content":"压缩图片"}],["meta",{"property":"og:description","content":"基于pillow进行图片压缩 import os from PIL import Image # 获取图片文件大小 def get_size(file): # 获取文件大小:KB size = os.path.getsize(file) return size / 1024 # 拼接输出文件地址 def get_outfile(infile, outfile): if outfile: return outfile dir, suffix = os.path.splitext(infile) outfile = '{}-out{}'.format(dir, suffix) return outfile # 压缩图片方法(配置即可用_1007) def compress_image(infile, outfile='', mb=600, step=10, quality=80): # 判断该张图片是否压缩 if os.path.exists(outfile): return \\"\\"\\"不改变图片尺寸压缩到指定大小 :param infile: 压缩源文件 :param outfile: 压缩文件保存地址 :param mb: 压缩目标，KB :param step: 每次调整的压缩比率 :param quality: 初始压缩比率 :return: 压缩文件地址，压缩文件大小 \\"\\"\\" o_size = get_size(infile) if o_size &lt;= mb: return infile outfile = get_outfile(infile, outfile) while o_size &gt; mb: im = Image.open(infile) im.save(outfile, quality=quality) if quality - step &lt; 0: break quality -= step o_size = get_size(outfile) return outfile, get_size(outfile) # 扩展压缩 a = r\\"C:\\\\Users\\\\DM\\\\Desktop\\\\图片过长\\\\新建文件夹\\\\1\\" b = r\\"C:\\\\Users\\\\DM\\\\Desktop\\\\图片过长\\\\新建文件夹\\\\2\\" for i in os.listdir(a): in_file = os.path.join(a, i) out_file = os.path.join(b, i) print(in_file, out_file) compress_image(in_file, out_file)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-31T11:11:28.000Z"}],["meta",{"property":"article:author","content":"爱喝水的木子"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"压缩"}],["meta",{"property":"article:tag","content":"图片"}],["meta",{"property":"article:modified_time","content":"2023-08-31T11:11:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"压缩图片\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-31T11:11:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"爱喝水的木子\\",\\"url\\":\\"https://lideshan.top\\",\\"email\\":\\"muzi@lideshan.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1693480288000,"updatedTime":1693480288000,"contributors":[{"name":"爱喝水的木子","email":"50564847+ice-a@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.93,"words":278},"filePathRelative":"posts/python/压缩图片.md","localizedDate":"2023年8月31日","excerpt":"<h1> 基于pillow进行图片压缩</h1>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> os\\n<span class=\\"token keyword\\">from</span> PIL <span class=\\"token keyword\\">import</span> Image\\n\\n\\n<span class=\\"token comment\\"># 获取图片文件大小</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_size</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\"># 获取文件大小:KB</span>\\n    size <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>getsize<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> size <span class=\\"token operator\\">/</span> <span class=\\"token number\\">1024</span>\\n\\n\\n<span class=\\"token comment\\"># 拼接输出文件地址</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_outfile</span><span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">,</span> outfile<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">if</span> outfile<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> outfile\\n    <span class=\\"token builtin\\">dir</span><span class=\\"token punctuation\\">,</span> suffix <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>splitext<span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">)</span>\\n    outfile <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'{}-out{}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">dir</span><span class=\\"token punctuation\\">,</span> suffix<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> outfile\\n\\n\\n<span class=\\"token comment\\"># 压缩图片方法(配置即可用_1007)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">compress_image</span><span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">,</span> outfile<span class=\\"token operator\\">=</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">,</span> mb<span class=\\"token operator\\">=</span><span class=\\"token number\\">600</span><span class=\\"token punctuation\\">,</span> step<span class=\\"token operator\\">=</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> quality<span class=\\"token operator\\">=</span><span class=\\"token number\\">80</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\"># 判断该张图片是否压缩</span>\\n    <span class=\\"token keyword\\">if</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>exists<span class=\\"token punctuation\\">(</span>outfile<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"不改变图片尺寸压缩到指定大小\\n    :param infile: 压缩源文件\\n    :param outfile: 压缩文件保存地址\\n    :param mb: 压缩目标，KB\\n    :param step: 每次调整的压缩比率\\n    :param quality: 初始压缩比率\\n    :return: 压缩文件地址，压缩文件大小\\n    \\"\\"\\"</span>\\n    o_size <span class=\\"token operator\\">=</span> get_size<span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> o_size <span class=\\"token operator\\">&lt;=</span> mb<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> infile\\n    outfile <span class=\\"token operator\\">=</span> get_outfile<span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">,</span> outfile<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">while</span> o_size <span class=\\"token operator\\">&gt;</span> mb<span class=\\"token punctuation\\">:</span>\\n        im <span class=\\"token operator\\">=</span> Image<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">)</span>\\n        im<span class=\\"token punctuation\\">.</span>save<span class=\\"token punctuation\\">(</span>outfile<span class=\\"token punctuation\\">,</span> quality<span class=\\"token operator\\">=</span>quality<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> quality <span class=\\"token operator\\">-</span> step <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">break</span>\\n        quality <span class=\\"token operator\\">-=</span> step\\n        o_size <span class=\\"token operator\\">=</span> get_size<span class=\\"token punctuation\\">(</span>outfile<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> outfile<span class=\\"token punctuation\\">,</span> get_size<span class=\\"token punctuation\\">(</span>outfile<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token comment\\"># 扩展压缩</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token string\\">r\\"C:\\\\Users\\\\DM\\\\Desktop\\\\图片过长\\\\新建文件夹\\\\1\\"</span>\\nb <span class=\\"token operator\\">=</span> <span class=\\"token string\\">r\\"C:\\\\Users\\\\DM\\\\Desktop\\\\图片过长\\\\新建文件夹\\\\2\\"</span>\\n<span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> os<span class=\\"token punctuation\\">.</span>listdir<span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    in_file <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">)</span>\\n    out_file <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>in_file<span class=\\"token punctuation\\">,</span> out_file<span class=\\"token punctuation\\">)</span>\\n    compress_image<span class=\\"token punctuation\\">(</span>in_file<span class=\\"token punctuation\\">,</span> out_file<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"爱喝水的木子"},"autoDesc":true}`);export{n as data};
