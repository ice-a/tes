import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-cfc8e941.js";const o={},t=e(`<h2 id="_1-查找数据的查询" tabindex="-1"><a class="header-anchor" href="#_1-查找数据的查询" aria-hidden="true">#</a> 1. 查找数据的查询</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>: 用于从数据库中选择数据
	<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name<span class="token punctuation">;</span>
<span class="token keyword">DISTINCT</span>: 用于过滤掉重复的值并返回指定列的行
	<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> column_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="where-用于过滤记录-行" tabindex="-1"><a class="header-anchor" href="#where-用于过滤记录-行" aria-hidden="true">#</a> <strong>WHERE</strong>: 用于过滤记录/行</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2 <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition1 <span class="token operator">AND</span> condition2<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition1 <span class="token operator">OR</span> condition2<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> <span class="token operator">NOT</span> condition<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition1 <span class="token operator">AND</span> <span class="token punctuation">(</span>condition2 <span class="token operator">OR</span> condition3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> column_name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="order-by-用于结果集的排序-升序-asc-或者降序-desc" tabindex="-1"><a class="header-anchor" href="#order-by-用于结果集的排序-升序-asc-或者降序-desc" aria-hidden="true">#</a> <strong>ORDER BY</strong>: 用于结果集的排序，升序（ASC）或者降序（DESC）</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">column</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">column</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> column1 <span class="token keyword">ASC</span><span class="token punctuation">,</span> column2 <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="select-top-用于指定从表顶部返回的记录数" tabindex="-1"><a class="header-anchor" href="#select-top-用于指定从表顶部返回的记录数" aria-hidden="true">#</a> <strong>SELECT TOP</strong>: 用于指定从表顶部返回的记录数</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">TOP</span> number columns_names <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token keyword">TOP</span> <span class="token keyword">percent</span> columns_names <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
<span class="token comment"># 并非所有数据库系统都支持SELECT TOP。 MySQL 中是LIMIT子句</span>
<span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table_name <span class="token keyword">LIMIT</span> <span class="token keyword">offset</span><span class="token punctuation">,</span> count<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="like-用于搜索列中的特定模式-where-子句中使用的运算符" tabindex="-1"><a class="header-anchor" href="#like-用于搜索列中的特定模式-where-子句中使用的运算符" aria-hidden="true">#</a> <strong>LIKE</strong>: 用于搜索列中的特定模式，WHERE 子句中使用的运算符</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token keyword">percent</span> sign<span class="token punctuation">)</span> 是一个表示零个，一个或多个字符的通配符
_ <span class="token punctuation">(</span>underscore<span class="token punctuation">)</span> 是一个表示单个字符通配符
<span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> column_name <span class="token operator">LIKE</span> pattern<span class="token punctuation">;</span>
<span class="token operator">LIKE</span> ‘a<span class="token operator">%</span>’    （查找任何以“a”开头的值）
<span class="token operator">LIKE</span> ‘<span class="token operator">%</span>a’    （查找任何以“a”结尾的值）
<span class="token operator">LIKE</span> ‘<span class="token operator">%</span><span class="token operator">or</span><span class="token operator">%</span>’  （查找任何包含“<span class="token operator">or</span>”的值）
<span class="token operator">LIKE</span> ‘_r<span class="token operator">%</span>’   （查找任何第二位是“r”的值）
<span class="token operator">LIKE</span> ‘a_<span class="token operator">%</span>_<span class="token operator">%</span>’ （查找任何以“a”开头且长度至少为<span class="token number">3</span>的值）
<span class="token operator">LIKE</span> ‘<span class="token punctuation">[</span>a<span class="token operator">-</span>c<span class="token punctuation">]</span><span class="token operator">%</span>’（查找任何以“a”或“b”或“c”开头的值）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="in-用于在-where-子句中指定多个值的运算符" tabindex="-1"><a class="header-anchor" href="#in-用于在-where-子句中指定多个值的运算符" aria-hidden="true">#</a> <strong>IN</strong>: 用于在 WHERE 子句中指定多个值的运算符</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>本质上，<span class="token operator">IN</span>运算符是多个<span class="token operator">OR</span>条件的简写
<span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> column_name <span class="token operator">IN</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> …<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> column_name <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> STATEMENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="between-用于过滤给定范围的值的运算符" tabindex="-1"><a class="header-anchor" href="#between-用于过滤给定范围的值的运算符" aria-hidden="true">#</a> <strong>BETWEEN</strong>: 用于过滤给定范围的值的运算符</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> column_name <span class="token operator">BETWEEN</span> value1 <span class="token operator">AND</span> value2<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Products <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>column_name <span class="token operator">BETWEEN</span> value1 <span class="token operator">AND</span> value2<span class="token punctuation">)</span> <span class="token operator">AND</span> <span class="token operator">NOT</span> column_name2 <span class="token operator">IN</span> <span class="token punctuation">(</span>value3<span class="token punctuation">,</span> value4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Products <span class="token keyword">WHERE</span> column_name <span class="token operator">BETWEEN</span> <span class="token comment">#01/07/1999# AND #03/12/1999#;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="null-代表一个字段没有值" tabindex="-1"><a class="header-anchor" href="#null-代表一个字段没有值" aria-hidden="true">#</a> <strong>NULL</strong>: 代表一个字段没有值</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> column_name <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> column_name <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="as-用于给表或者列分配别名" tabindex="-1"><a class="header-anchor" href="#as-用于给表或者列分配别名" aria-hidden="true">#</a> <strong>AS</strong>: 用于给表或者列分配别名</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_name <span class="token keyword">AS</span> alias_name <span class="token keyword">FROM</span> table_name<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> column_name <span class="token keyword">FROM</span> table_name <span class="token keyword">AS</span> alias_name<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> column_name <span class="token keyword">AS</span> alias_name1<span class="token punctuation">,</span> column_name2 <span class="token keyword">AS</span> alias_name2<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> column_name1<span class="token punctuation">,</span> column_name2 <span class="token operator">+</span> ‘<span class="token punctuation">,</span> ‘ <span class="token operator">+</span> column_name3 <span class="token keyword">AS</span> alias_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="union-用于组合两个或者多个-select-语句的结果集的运算符" tabindex="-1"><a class="header-anchor" href="#union-用于组合两个或者多个-select-语句的结果集的运算符" aria-hidden="true">#</a> <strong>UNION</strong>: 用于组合两个或者多个 SELECT 语句的结果集的运算符</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>每个 <span class="token keyword">SELECT</span> 语句必须拥有相同的列数
列必须拥有相似的数据类型
每个 <span class="token keyword">SELECT</span> 语句中的列也必须具有相同的顺序
<span class="token keyword">SELECT</span> columns_names <span class="token keyword">FROM</span> table1 <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> column_name <span class="token keyword">FROM</span> table2<span class="token punctuation">;</span>
<span class="token keyword">UNION</span> 仅允许选择不同的值<span class="token punctuation">,</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span> 允许重复
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="any-all-用于检查-where-或-having-子句中使用的子查询条件的运算符" tabindex="-1"><a class="header-anchor" href="#any-all-用于检查-where-或-having-子句中使用的子查询条件的运算符" aria-hidden="true">#</a> <strong>ANY|ALL</strong>: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ANY</span> 如果任何子查询值满足条件，则返回 <span class="token boolean">true</span>。
<span class="token keyword">ALL</span> 如果所有子查询值都满足条件，则返回 <span class="token boolean">true</span>。
<span class="token keyword">SELECT</span> columns_names <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> column_name operator <span class="token punctuation">(</span><span class="token keyword">ANY</span><span class="token operator">|</span><span class="token keyword">ALL</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> column_name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="group-by-通常与聚合函数-count-max-min-sum-avg-一起使用-用于将结果集分组为一列或多列" tabindex="-1"><a class="header-anchor" href="#group-by-通常与聚合函数-count-max-min-sum-avg-一起使用-用于将结果集分组为一列或多列" aria-hidden="true">#</a> <strong>GROUP BY</strong>: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_name1<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>column_name2<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> column_name1 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>column_name2<span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="having-having-子句指定-select-语句应仅返回聚合值满足指定条件的行。它被添加到-sql-语言中-因为where关键字不能与聚合函数一起使用。" tabindex="-1"><a class="header-anchor" href="#having-having-子句指定-select-语句应仅返回聚合值满足指定条件的行。它被添加到-sql-语言中-因为where关键字不能与聚合函数一起使用。" aria-hidden="true">#</a> <strong>HAVING</strong>: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为WHERE关键字不能与聚合函数一起使用。</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>column_name1<span class="token punctuation">)</span><span class="token punctuation">,</span> column_name2 <span class="token keyword">FROM</span> <span class="token keyword">table</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> column_name2 <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>column_name1<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-修改数据的查询" tabindex="-1"><a class="header-anchor" href="#_2-修改数据的查询" aria-hidden="true">#</a> 2.修改数据的查询</h2><h4 id="insert-into-用于在表中插入新记录-行" tabindex="-1"><a class="header-anchor" href="#insert-into-用于在表中插入新记录-行" aria-hidden="true">#</a> <strong>INSERT INTO</strong>: 用于在表中插入新记录/行</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table_name <span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table_name <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2 …<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="update-用于修改表中的现有记录-行" tabindex="-1"><a class="header-anchor" href="#update-用于修改表中的现有记录-行" aria-hidden="true">#</a> <strong>UPDATE</strong>: 用于修改表中的现有记录/行</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> table_name <span class="token keyword">SET</span> column1 <span class="token operator">=</span> value1<span class="token punctuation">,</span> column2 <span class="token operator">=</span> value2 <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
<span class="token keyword">UPDATE</span> table_name <span class="token keyword">SET</span> column_name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="delete-用于删除表中的现有记录-行" tabindex="-1"><a class="header-anchor" href="#delete-用于删除表中的现有记录-行" aria-hidden="true">#</a> <strong>DELETE</strong>: 用于删除表中的现有记录/行</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
<span class="token keyword">DELETE</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-聚合查询" tabindex="-1"><a class="header-anchor" href="#_3-聚合查询" aria-hidden="true">#</a> 3. 聚合查询</h2><h4 id="count-返回出现次数" tabindex="-1"><a class="header-anchor" href="#count-返回出现次数" aria-hidden="true">#</a> <strong>COUNT</strong>: 返回出现次数</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> column_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="min-and-max-返回所选列的最小-最大值" tabindex="-1"><a class="header-anchor" href="#min-and-max-返回所选列的最小-最大值" aria-hidden="true">#</a> <strong>MIN() and MAX()</strong>: 返回所选列的最小/最大值</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">MIN</span> <span class="token punctuation">(</span>column_names<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token function">MAX</span> <span class="token punctuation">(</span>column_names<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="avg-返回数字列的平均值" tabindex="-1"><a class="header-anchor" href="#avg-返回数字列的平均值" aria-hidden="true">#</a> <strong>AVG()</strong>: 返回数字列的平均值</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">AVG</span> <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="sum-返回数值列的总和" tabindex="-1"><a class="header-anchor" href="#sum-返回数值列的总和" aria-hidden="true">#</a> <strong>SUM()</strong>: 返回数值列的总和</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">SUM</span> <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-连接查询" tabindex="-1"><a class="header-anchor" href="#_4-连接查询" aria-hidden="true">#</a> 4.连接查询</h2><h4 id="inner-join-内连接-返回在两张表中具有匹配值的记录" tabindex="-1"><a class="header-anchor" href="#inner-join-内连接-返回在两张表中具有匹配值的记录" aria-hidden="true">#</a> <strong>INNER JOIN</strong>: 内连接，返回在两张表中具有匹配值的记录</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table1 <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> table2 <span class="token keyword">ON</span> table1<span class="token punctuation">.</span>column_name<span class="token operator">=</span>table2<span class="token punctuation">.</span>column_name<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> table1<span class="token punctuation">.</span>column_name1<span class="token punctuation">,</span> table2<span class="token punctuation">.</span>column_name2<span class="token punctuation">,</span> table3<span class="token punctuation">.</span>column_name3 <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>table1 <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> table2 <span class="token keyword">ON</span> relationship<span class="token punctuation">)</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> table3 <span class="token keyword">ON</span> relationship<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="left-outer-join-左外连接-返回左表-table1-中的所有记录-以及右表中的匹配记录-table2" tabindex="-1"><a class="header-anchor" href="#left-outer-join-左外连接-返回左表-table1-中的所有记录-以及右表中的匹配记录-table2" aria-hidden="true">#</a> <strong>LEFT (OUTER) JOIN</strong>: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table1 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> table2 <span class="token keyword">ON</span> table1<span class="token punctuation">.</span>column_name<span class="token operator">=</span>table2<span class="token punctuation">.</span>column_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="right-outer-join-右外连接-返回右表-table2-中的所有记录-以及左表-table1-中匹配的记录" tabindex="-1"><a class="header-anchor" href="#right-outer-join-右外连接-返回右表-table2-中的所有记录-以及左表-table1-中匹配的记录" aria-hidden="true">#</a> <strong>RIGHT (OUTER) JOIN</strong>: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table1 <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> table2 <span class="token keyword">ON</span> table1<span class="token punctuation">.</span>column_name<span class="token operator">=</span>table2<span class="token punctuation">.</span>column_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="full-outer-join-全外连接-全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-null-填充。" tabindex="-1"><a class="header-anchor" href="#full-outer-join-全外连接-全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-null-填充。" aria-hidden="true">#</a> <strong>FULL (OUTER) JOIN</strong>: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table1 <span class="token keyword">FULL</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> table2 <span class="token keyword">ON</span> table1<span class="token punctuation">.</span>column_name<span class="token operator">=</span>table2<span class="token punctuation">.</span>column_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="self-join-自连接-表自身连接" tabindex="-1"><a class="header-anchor" href="#self-join-自连接-表自身连接" aria-hidden="true">#</a> <strong>Self JOIN</strong>: 自连接，表自身连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column_names <span class="token keyword">FROM</span> table1 T1<span class="token punctuation">,</span> table1 T2 <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-视图查询" tabindex="-1"><a class="header-anchor" href="#_5-视图查询" aria-hidden="true">#</a> 5.视图查询</h2><h4 id="create-创建视图" tabindex="-1"><a class="header-anchor" href="#create-创建视图" aria-hidden="true">#</a> <strong>CREATE</strong>: 创建视图</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> view_name <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2 <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="select-检索视图" tabindex="-1"><a class="header-anchor" href="#select-检索视图" aria-hidden="true">#</a> <strong>SELECT</strong>: 检索视图</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> view_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="drop-删除视图" tabindex="-1"><a class="header-anchor" href="#drop-删除视图" aria-hidden="true">#</a> <strong>DROP</strong>: 删除视图</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> view_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_6-修改表的查询" tabindex="-1"><a class="header-anchor" href="#_6-修改表的查询" aria-hidden="true">#</a> 6.修改表的查询</h2><h4 id="add-添加字段" tabindex="-1"><a class="header-anchor" href="#add-添加字段" aria-hidden="true">#</a> <strong>ADD</strong>: 添加字段</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">ADD</span> column_name column_definition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="modify-修改字段数据类型" tabindex="-1"><a class="header-anchor" href="#modify-修改字段数据类型" aria-hidden="true">#</a> <strong>MODIFY</strong>: 修改字段数据类型</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">MODIFY</span> column_name column_type<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="drop-删除字段" tabindex="-1"><a class="header-anchor" href="#drop-删除字段" aria-hidden="true">#</a> <strong>DROP</strong>: 删除字段</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> column_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,67),l=[t];function p(c,r){return a(),s("div",null,l)}const u=n(o,[["render",p],["__file","SQL速查.html.vue"]]);export{u as default};
